// node homework_4.js
// 1. Сделайте функцию, которая возвращает квадрат числа. Число передается параметром.
function nambersquare (num) {
    return num ** 2;
}
console.log (nambersquare (4));

// 2. Сделайте функцию, которая возвращает сумму двух чисел.
function sum (a, b) {
    return a + b;
}
console.log (sum (2,4));
 //3. Сделайте функцию, которая отнимает от первого числа второе и делит на третье.
 function resultnum (a, b, c) {
     return (a - b) / c;
 }
 console.log (resultnum (12,3,3));

// 4. Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке.
function getday(i) {
    if (i === 1) {
        return 'понедельник';
    }
    else if (i === 2) {
        return 'вторник';  
    }
    else if (i === 3) {
        return 'среда'; 
    }
    else if (i === 4) {
        return 'четверг'; 
    }
    else if (i === 5) {
        return 'пятница'; 
    }
    else if (i === 6) {
        return 'суббота'; 
    }
    else if (i === 7) {
        return 'воскресенье'; 
    }
}
console.log(getday(5));

// 5. Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.
function resultnam(a, b) {
    if (a === b) {
        return 'true';
    }
    else if (a !== b) {
        return 'false';
}
}
console.log (resultnam(2, 2));
// 6. Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть вернет true, а если нет то - false.
function resultnam(a, b) {
    if (a + b > 10) {
        return 'true';
    }
    else if (a + b <= 10) {
        return 'false';
}
}
console.log (resultnam(2, 11));
// 7. Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. Если отрицательное - пусть функция вернет true, а если нет - false.
function num(a) {
    if (a <0) {
        return 'true';
    }
    else if (a > 00) {
        return 'false';
}
}
console.log (num(-2));
// 8. Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.
function isNumberInRange(a) {
  if (a > 0 && a < 10)  {
      return 'true';
  }
  else { return 'false';}
}
console.log (isNumberInRange(-5));

// 9. Создайте функцию rgb(), которая будет принимать три числовых аргумента и возвращать строку вида «rgb(23,100,134)». Если аргументы не заданы, считать их равными нулю. Не проверять переменные на тип данных
function rgb (a = 0, b = 0, c = 0) {
    return `rgb ($ {a}, $ {b}, $ {c})`;
}
console.log (rgb (23,100,134)) // в консоль суммы не поттягиваются

// 10. Написать функцию, которая принимает в себя три параметра - число и две функции. Первая переданная функция  возвращает возведенное в квадрат переданное число и будет вызываться, если число четное. Вторая переданная коллбэк-функция будет вызываться с переданным в нее числом , если число нечетное, и будет возвращать число, увеличенное на 1.
function nam(a, b = a*a, c=a + 1) {
    if (a % 2 === 0) {
        return b;
    }
    else {return c};
}
console.log (nam (4));
console.log (nam (5));
// 11. Написать функцию mult(num1, num2 , num3) принимающую 3 числа. Функцию перемножает num1 и num2 столько раз, сколько указано в третьем аргументе num3. Значения num1 и num2 по умолчанию 1,  num3 по умолчанию 2. 

// 12. Написать функцию, которая принимает 3 аргумента(каждый аргумент - 1 слово) и возвращает строку с этими 3 словами, расположенными в алфавитном порядке.
// 13. Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи.
// 14. Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.
// 15. Найдите все года от 1 до 2020, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.
// 16. Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.
// 17. Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.
// 18. Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его делителей (чисел, на которое делится данное число без остатка).
// 19. Дан массив с числами. Выведите последовательно его элементы используя рекурсию и не используя цикл.
// 20. Дано число. Сложите его цифры. Если сумма получилась более 9-ти, опять сложите его цифры. И так, пока сумма не станет однозначным числом (9 и менее).
